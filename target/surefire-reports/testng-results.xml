<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="34" passed="30" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-04T17:33:12 IST" name="Surefire suite" finished-at="2025-08-04T17:33:33 IST" duration-ms="21229">
    <groups>
    </groups>
    <test started-at="2025-08-04T17:33:12 IST" name="Surefire test" finished-at="2025-08-04T17:33:33 IST" duration-ms="21229">
      <class name="testcases.UserTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.UserTests@636be97c]" started-at="2025-08-04T17:33:29 IST" name="setup" finished-at="2025-08-04T17:33:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCreateUser()[pri:0, instance:testcases.UserTests@636be97c]" started-at="2025-08-04T17:33:29 IST" name="testCreateUser" finished-at="2025-08-04T17:33:29 IST" duration-ms="710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUser -->
        <test-method signature="testDeleteUser()[pri:0, instance:testcases.UserTests@636be97c]" started-at="2025-08-04T17:33:29 IST" name="testDeleteUser" finished-at="2025-08-04T17:33:30 IST" duration-ms="528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteUser -->
        <test-method signature="testGetAllUsers()[pri:0, instance:testcases.UserTests@636be97c]" started-at="2025-08-04T17:33:30 IST" name="testGetAllUsers" finished-at="2025-08-04T17:33:30 IST" duration-ms="566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllUsers -->
        <test-method signature="testGetUserById()[pri:0, instance:testcases.UserTests@636be97c]" started-at="2025-08-04T17:33:30 IST" name="testGetUserById" finished-at="2025-08-04T17:33:31 IST" duration-ms="543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserById -->
        <test-method signature="testGetUsersSorted()[pri:0, instance:testcases.UserTests@636be97c]" started-at="2025-08-04T17:33:31 IST" name="testGetUsersSorted" finished-at="2025-08-04T17:33:31 IST" duration-ms="575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUsersSorted -->
        <test-method signature="testGetUsersSortedAsc()[pri:0, instance:testcases.UserTests@636be97c]" started-at="2025-08-04T17:33:31 IST" name="testGetUsersSortedAsc" finished-at="2025-08-04T17:33:32 IST" duration-ms="574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUsersSortedAsc -->
        <test-method signature="testGetUsersWithLimit()[pri:0, instance:testcases.UserTests@636be97c]" started-at="2025-08-04T17:33:32 IST" name="testGetUsersWithLimit" finished-at="2025-08-04T17:33:33 IST" duration-ms="547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUsersWithLimit -->
        <test-method signature="testUpdateUser()[pri:0, instance:testcases.UserTests@636be97c]" started-at="2025-08-04T17:33:33 IST" name="testUpdateUser" finished-at="2025-08-04T17:33:33 IST" duration-ms="466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUser -->
      </class> <!-- testcases.UserTests -->
      <class name="testcases.CartTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.CartTests@c267ef4]" started-at="2025-08-04T17:33:12 IST" name="setup" finished-at="2025-08-04T17:33:12 IST" duration-ms="332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCreateCart()[pri:0, instance:testcases.CartTests@c267ef4]" started-at="2025-08-04T17:33:12 IST" name="testCreateCart" finished-at="2025-08-04T17:33:15 IST" duration-ms="2411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCart -->
        <test-method signature="testDeleteCart()[pri:0, instance:testcases.CartTests@c267ef4]" started-at="2025-08-04T17:33:15 IST" name="testDeleteCart" finished-at="2025-08-04T17:33:15 IST" duration-ms="618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteCart -->
        <test-method signature="testGetAllCarts()[pri:0, instance:testcases.CartTests@c267ef4]" started-at="2025-08-04T17:33:15 IST" name="testGetAllCarts" finished-at="2025-08-04T17:33:16 IST" duration-ms="595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllCarts -->
        <test-method signature="testGetCartById()[pri:0, instance:testcases.CartTests@c267ef4]" started-at="2025-08-04T17:33:16 IST" name="testGetCartById" finished-at="2025-08-04T17:33:16 IST" duration-ms="637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCartById -->
        <test-method signature="testGetCartsByDateRange()[pri:0, instance:testcases.CartTests@c267ef4]" started-at="2025-08-04T17:33:16 IST" name="testGetCartsByDateRange" finished-at="2025-08-04T17:33:17 IST" duration-ms="704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCartsByDateRange -->
        <test-method signature="testGetCartsSorted()[pri:0, instance:testcases.CartTests@c267ef4]" started-at="2025-08-04T17:33:17 IST" name="testGetCartsSorted" finished-at="2025-08-04T17:33:18 IST" duration-ms="558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCartsSorted -->
        <test-method signature="testGetCartsSortedAsc()[pri:0, instance:testcases.CartTests@c267ef4]" started-at="2025-08-04T17:33:18 IST" name="testGetCartsSortedAsc" finished-at="2025-08-04T17:33:18 IST" duration-ms="565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCartsSortedAsc -->
        <test-method signature="testGetCartsWithLimit()[pri:0, instance:testcases.CartTests@c267ef4]" started-at="2025-08-04T17:33:18 IST" name="testGetCartsWithLimit" finished-at="2025-08-04T17:33:19 IST" duration-ms="566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCartsWithLimit -->
        <test-method signature="testGetUserCart()[pri:0, instance:testcases.CartTests@c267ef4]" started-at="2025-08-04T17:33:19 IST" name="testGetUserCart" finished-at="2025-08-04T17:33:19 IST" duration-ms="580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserCart -->
        <test-method signature="testUpdateCart()[pri:0, instance:testcases.CartTests@c267ef4]" started-at="2025-08-04T17:33:19 IST" name="testUpdateCart" finished-at="2025-08-04T17:33:20 IST" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateCart -->
      </class> <!-- testcases.CartTests -->
      <class name="testcases.ProductDataDrivenTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.ProductDataDrivenTest@7a69b07]" started-at="2025-08-04T17:33:22 IST" name="setup" finished-at="2025-08-04T17:33:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAddNewProduct(java.util.Map)[pri:0, instance:testcases.ProductDataDrivenTest@7a69b07]" started-at="2025-08-04T17:33:22 IST" name="testAddNewProduct" data-provider="jsonDataProvider" finished-at="2025-08-04T17:33:22 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.io.FileNotFoundException: .\testdata\product.json (The system cannot find the path specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.io.FileNotFoundException: .\testdata\product.json (The system cannot find the path specified)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:58)
at org.testng.internal.invokers.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:159)
at org.testng.internal.Parameters.handleParameters(Parameters.java:809)
at org.testng.internal.Parameters.handleParameters(Parameters.java:734)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:949)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.io.FileNotFoundException: .\testdata\product.json (The system cannot find the path specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:213)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:152)
at com.fasterxml.jackson.core.TokenStreamFactory._fileInputStream(TokenStreamFactory.java:262)
at com.fasterxml.jackson.core.JsonFactory.createParser(JsonFactory.java:1030)
at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3562)
at utils.DataProviders.jsonDataProvider(DataProviders.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:54)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewProduct -->
      </class> <!-- testcases.ProductDataDrivenTest -->
      <class name="testcases.ProductTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.ProductTests@5e82df6a]" started-at="2025-08-04T17:33:22 IST" name="setup" finished-at="2025-08-04T17:33:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAddNewProduct()[pri:0, instance:testcases.ProductTests@5e82df6a]" started-at="2025-08-04T17:33:22 IST" name="testAddNewProduct" finished-at="2025-08-04T17:33:22 IST" duration-ms="496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewProduct -->
        <test-method signature="testDeleteProduct()[pri:0, instance:testcases.ProductTests@5e82df6a]" started-at="2025-08-04T17:33:22 IST" name="testDeleteProduct" finished-at="2025-08-04T17:33:23 IST" duration-ms="548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProduct -->
        <test-method signature="testGetAllCategories()[pri:0, instance:testcases.ProductTests@5e82df6a]" started-at="2025-08-04T17:33:23 IST" name="testGetAllCategories" finished-at="2025-08-04T17:33:23 IST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllCategories -->
        <test-method signature="testGetAllProducts()[pri:0, instance:testcases.ProductTests@5e82df6a]" started-at="2025-08-04T17:33:23 IST" name="testGetAllProducts" finished-at="2025-08-04T17:33:24 IST" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllProducts -->
        <test-method signature="testGetLimitedProducts()[pri:0, instance:testcases.ProductTests@5e82df6a]" started-at="2025-08-04T17:33:24 IST" name="testGetLimitedProducts" finished-at="2025-08-04T17:33:24 IST" duration-ms="535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLimitedProducts -->
        <test-method signature="testGetProductsByCategory()[pri:0, instance:testcases.ProductTests@5e82df6a]" started-at="2025-08-04T17:33:24 IST" name="testGetProductsByCategory" finished-at="2025-08-04T17:33:25 IST" duration-ms="593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProductsByCategory -->
        <test-method signature="testGetSingleProductById()[pri:0, instance:testcases.ProductTests@5e82df6a]" started-at="2025-08-04T17:33:25 IST" name="testGetSingleProductById" finished-at="2025-08-04T17:33:25 IST" duration-ms="450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleProductById -->
        <test-method signature="testGetSortedProducts()[pri:0, instance:testcases.ProductTests@5e82df6a]" started-at="2025-08-04T17:33:25 IST" name="testGetSortedProducts" finished-at="2025-08-04T17:33:26 IST" duration-ms="481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSortedProducts -->
        <test-method signature="testGetSortedProductsAsc()[pri:0, instance:testcases.ProductTests@5e82df6a]" started-at="2025-08-04T17:33:26 IST" name="testGetSortedProductsAsc" finished-at="2025-08-04T17:33:26 IST" duration-ms="471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSortedProductsAsc -->
        <test-method signature="testUpdateProduct()[pri:0, instance:testcases.ProductTests@5e82df6a]" started-at="2025-08-04T17:33:26 IST" name="testUpdateProduct" finished-at="2025-08-04T17:33:27 IST" duration-ms="459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateProduct -->
      </class> <!-- testcases.ProductTests -->
      <class name="testcases.SchemaTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.SchemaTests@3f197a46]" started-at="2025-08-04T17:33:27 IST" name="setup" finished-at="2025-08-04T17:33:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCartSchema()[pri:0, instance:testcases.SchemaTests@3f197a46]" started-at="2025-08-04T17:33:27 IST" name="testCartSchema" finished-at="2025-08-04T17:33:27 IST" duration-ms="535" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Schema to use cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Schema to use cannot be null
at io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)
at io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)
at io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)
at testcases.SchemaTests.testCartSchema(SchemaTests.java:37)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartSchema -->
        <test-method signature="testProductSchema()[pri:0, instance:testcases.SchemaTests@3f197a46]" started-at="2025-08-04T17:33:27 IST" name="testProductSchema" finished-at="2025-08-04T17:33:28 IST" duration-ms="441" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Schema to use cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Schema to use cannot be null
at io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)
at io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)
at io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)
at testcases.SchemaTests.testProductSchema(SchemaTests.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductSchema -->
        <test-method signature="testUserSchema()[pri:0, instance:testcases.SchemaTests@3f197a46]" started-at="2025-08-04T17:33:28 IST" name="testUserSchema" finished-at="2025-08-04T17:33:28 IST" duration-ms="626" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Schema to use cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Schema to use cannot be null
at io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)
at io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)
at io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)
at testcases.SchemaTests.testUserSchema(SchemaTests.java:49)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserSchema -->
      </class> <!-- testcases.SchemaTests -->
      <class name="testcases.LoginTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.LoginTests@1139b2f3]" started-at="2025-08-04T17:33:20 IST" name="setup" finished-at="2025-08-04T17:33:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidUserLogin()[pri:0, instance:testcases.LoginTests@1139b2f3]" started-at="2025-08-04T17:33:20 IST" name="testInvalidUserLogin" finished-at="2025-08-04T17:33:21 IST" duration-ms="976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUserLogin -->
        <test-method signature="testValidUserLogin()[pri:0, instance:testcases.LoginTests@1139b2f3]" started-at="2025-08-04T17:33:21 IST" name="testValidUserLogin" finished-at="2025-08-04T17:33:22 IST" duration-ms="986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidUserLogin -->
      </class> <!-- testcases.LoginTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
